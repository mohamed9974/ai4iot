apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: "2021-09-02T14:00:00Z"
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: "2021-09-02T14:00:00Z"
      labels:
        io.kompose.network/: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_PATHS_DATA
              value: /var/lib/grafana
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: TZ
              value: Etc/UTC
          image: grafana/grafana
          livenessProbe:
            exec:
              command:
                - wget
                - -O
                - /dev/null
                - http://localhost:3000
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          name: grafana
          ports:
            - containerPort: 3000
          #TODO: Add support for ReadinessProbe
          resources: {
            limits: {
              cpu: 100m,
              memory: 100Mi
            },
            requests: {
              cpu: 100m,
              memory: 100Mi
            }
          }
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-claim0
            - mountPath: /var/log/grafana
              name: grafana-claim1
      restartPolicy: Always
      volumes:
        - name: grafana-claim0
          persistentVolumeClaim:
            claimName: grafana-claim0
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
status: {}